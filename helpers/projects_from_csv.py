"""
Autogenerated script for creating projects in bulk from CSV.

To be modified as needed.
"""

import csv
import os


def generate_markdown_files(csv_path, output_dir):
    """
    Read a CSV file and generate Markdown files with a specific template.

    :param csv_path: Path to the input CSV file
    :param output_dir: Directory where Markdown files will be generated
    """
    # Ensure the output directory exists
    os.makedirs(output_dir, exist_ok=True)

    # Read the CSV file
    with open(csv_path, "r", newline="", encoding="utf-8") as csvfile:
        reader = csv.DictReader(csvfile)

        for row in reader:
            slug = row["slug"]

            # Create the directory for the slug if it doesn't exist
            slug_dir = os.path.join(output_dir, slug)
            os.makedirs(slug_dir, exist_ok=True)

            # Prepare the Markdown content
            markdown_content = f"""---
date: "{row.get('date', '2024-12-14')}"
tags: ["{row.get('tags', 'd3')}"]
title: "{row['title']}"
authors: ["{row.get('author', '')}"]
courses: ["30239-A24"]
---

{{{{< github repo="{row.get('github', '')}" >}}}}

<a class="main link" href="{row['url']}">
<img src="feature.png" />
{row['url']}
</a>

"""

            # Write the Markdown file
            markdown_path = os.path.join(slug_dir, "index.md")
            with open(markdown_path, "w", encoding="utf-8") as mdfile:
                mdfile.write(markdown_content)

            print(f"Generated: {markdown_path}")


def main():
    # Example usage
    csv_path = "input.csv"  # Replace with your CSV file path
    output_dir = "projects"  # Replace with your desired output directory
    generate_markdown_files(csv_path, output_dir)


if __name__ == "__main__":
    main()
